{"version":3,"sources":["store/ducks/posts.js","modules/home/styles/index.js","modules/home/components/card.js","utils/components/header/header.styled.js","utils/components/activity-indicator/index.js","modules/home/index.js","utils/helpers/usePosts.js","routes/index.js","store/ducks/index.js","store/index.js","utils/styles/theme.js","index.js"],"names":["Types","initialState","posts","error","isLoading","asyncGetPosts","page","dispatch","type","axios","get","params","then","res","data","map","elem","date","Date","createdAt","getDate","getMonth","getFullYear","getHours","getMinutes","payload","getPostsSuccess","catch","getPostsError","response","reducer","state","action","Container","styled","div","PageContainer","Text","props","theme","colors","lightGray","Author","darkGray","DateText","Content","ButtonContainer","Button","button","right","Card","title","content","author","substring","defaultProps","nav","lightBlue","h1","ActivityIndicator","loop","animationData","lottieJson","play","style","width","height","margin","Home","postsState","useSelector","useState","setPage","useDispatch","useEffect","a","usePosts","post","subtitle","onClick","Routes","path","exact","component","from","to","rootReducer","combineReducers","postsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","appTheme","black","white","darkBlue","darkGrey","red","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59a9772e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst Types = {\n  GET_POSTS: 'posts/GET_POSTS',\n  GET_POSTS_SUCCESS: 'posts/GET_POSTS_SUCCESS',\n  GET_POSTS_ERROR: 'posts/GET_POSTS_ERROR',\n};\n\nconst initialState = {\n  posts: [],\n  error: null,\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.GET_POSTS:\n      return { ...state, isLoading: true, posts: [], error: null };\n    case Types.GET_POSTS_SUCCESS:\n      return { ...state, isLoading: false, posts: action.payload.posts };\n    case Types.GET_POSTS_ERROR:\n      return { ...state, isLoading: false, posts: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst getPosts = () => ({\n  type: Types.GET_POSTS,\n});\n\nconst getPostsSuccess = (posts) => ({\n  type: Types.GET_POSTS_SUCCESS,\n  payload: { posts },\n});\n\nconst getPostsError = (error) => ({\n  type: Types.GET_POSTS_ERROR,\n  payload: { error },\n});\n\nconst asyncGetPosts = (page) => (dispatch) => {\n  dispatch(getPosts());\n  return axios\n    .get('/posts',{params:{page}})\n    .then((res) => {\n      const data = res.data.map(elem => {\n        const date = new Date(elem.createdAt)\n        const createdAt = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} Ã s ${date.getHours()}:${date.getMinutes()}`\n        return ({\n          ...elem, createdAt\n        })\n      });\n      dispatch(getPostsSuccess(data));\n    })\n    .catch((error) => dispatch(getPostsError(error.response.data)));\n};\n\nexport { asyncGetPosts };\nexport default reducer;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  max-width: 90%;\n  padding: 10px 26px;\n  background: #ffffff;\n  margin: auto;\n`;\n\nexport const PageContainer = styled.div`\n  max-width: 100%;\n`;\n\nexport const Text = styled.div`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 18px;\n  font-family: 'Roboto', arial;\n\n  text-align: justify;\n\n  padding-bottom: 8px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.lightGray};\n  margin-bottom: 4px;\n  color: ${(props) => (props.error ? 'red' : '#000000')};\n`;\n\nexport const Author = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  font-family: 'Roboto', arial;\n\n  text-align: left;\n\n  padding-bottom: 4px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.lightGray};\n  color: ${(props) => props.theme.colors.darkGray};\n`;\n\nexport const DateText = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  font-family: 'Roboto', arial;\n\n  text-align: left;\n\n  padding-bottom: 15px;\n\n  color: ${(props) => props.theme.colors.lightGray};\n`;\n\nexport const Content = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  font-family: 'Roboto', arial;\n\n  text-align: left;\n\n  padding-bottom: 15px;\n\n  width: 100%;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  padding: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.lightGray};\n`;\n\nexport const Button = styled.button`\n  border-width: 0px;\n  background-color: ${(props) => props.theme.colors.lightGray};\n  border-top-left-radius: ${(props) => props.right === true? '0px' : '50%' };\n  border-bottom-left-radius: ${(props) => props.right === true? '0px' : '50%' };\n  border-top-right-radius: ${(props) => props.right === false ? '0px' : '50%' };\n  border-bottom-right-radius: ${(props) => props.right === false? '0px' : '50%' };\n  padding: 4px;\n  font-size: 20px;\n  width: 30px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Author, Content, DateText, Container, Text } from '../styles';\n\nconst Card = ({ title, date, content, author}) => (\n  <Container>\n        <Text>{title}</Text>\n        <DateText>{date}</DateText>\n        <Content>{`${content.substring(0, 200)} [...]`}</Content>\n        <Author>{author}</Author>\n  </Container>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  content: PropTypes.string,\n  author: PropTypes.string,\n};\n\nCard.defaultProps = {\n  title: 'Noname',\n  date: 'No date',\n  content: 'No Content',\n  author: '',\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.nav`\n  background-color: ${(props) => props.theme.colors.lightBlue};\n  display: flex;\n  height: 92px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0px 0px 25px 25px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: 'Press Start 2P', cursive;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport Lottie from 'react-lottie-player';\n\nimport lottieJson from './lottie-source.json';\n\nexport const ActivityIndicator = () => (\n  <Lottie loop animationData={lottieJson} play style={{ width: '100%', height: 300, margin: 'auto' }} />\n);\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { usePosts } from '../../utils/helpers/usePosts';\nimport  Card  from './components/card';\nimport { Header } from '../../utils/components/header/header';\nimport { ActivityIndicator } from '../../utils/components/activity-indicator';\nimport { ButtonContainer, Button, PageContainer } from './styles'\n// import PropTypes from 'prop-types';\n\nconst Home = () => {\n  const postsState = useSelector((state) => state.posts);\n  const [page, setPage] = useState(1);\n  usePosts(page);\n  return (\n    <PageContainer>\n    {postsState.isLoading ?\n      <ActivityIndicator /> : <>\n      {postsState.posts.map( post => (\n        <Card\n          title={post.title}\n          date={post.createdAt}\n          content={post.subtitle}\n          author={post.author}\n        />\n      ))}\n      </>}\n      <ButtonContainer>\n        <Button right={false} type=\"button\" onClick={() => setPage(page-1)}> - </Button>\n        <span> {page} </span>\n        <Button right type=\"button\" onClick={() => setPage(page+1)}> + </Button>\n      </ButtonContainer>\n    </PageContainer>\n  );\n};\n// Home.propTypes = {};\n\nexport default Home;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { asyncGetPosts } from '../../store/ducks/posts';\n\nexport const usePosts= (page) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      dispatch(asyncGetPosts(page));\n    })();\n  }, [page]);\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n// import App from '../App';\nimport Home from '../modules/home';\n\nconst Routes = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      {/* <Route path=\"/posts\" component={} /> */}\n      <Redirect from=\"/*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import { combineReducers } from 'redux';\nimport postsReducer from './posts';\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer,\n});\n","/* eslint-disable no-underscore-dangle */\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","const appTheme = {\n  colors: {\n    black: '#010a00',\n    white: '#ffffff',\n    lightBlue: '#B8D8EE',\n    darkBlue: '#6E54D6',\n    lightGray: '#C4C4C4',\n    darkGrey: '#737373',\n    red: '#D64C46',\n  },\n};\n\nexport default appTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport './index.css';\nimport Routes from './routes';\nimport store from './store';\nimport appTheme from './utils/styles/theme';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={appTheme}>\n      <Routes />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}